import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import { supabase } from "../supabaseClient";

const ProductDetail = ({ addToCart }) => {
  const { productId } = useParams();
  const [product, setProduct] = useState(null);
  const [selectedColor, setSelectedColor] = useState("");
  const [selectedSize, setSelectedSize] = useState("");

  useEffect(() => {
    const fetchProduct = async () => {
      try {
        const { data, error } = await supabase
          .from("products")
          .select("*")
          .eq("id", productId)
          .single();

        if (error) {
          console.error("❌ خطأ في تحميل المنتج:", error);
        } else {
          setProduct(data);
          setSelectedColor(data.colors[0] || "");
          setSelectedSize(data.sizes[0] || "");
        }
      } catch (err) {
        console.error("❌ خطأ في تحميل المنتج:", err);
      }
    };
    fetchProduct();
  }, [productId]);

  if (!product) return <p>جارٍ تحميل المنتج...</p>;

  const remainingQuantity = product.quantities?.[`${selectedColor}-${selectedSize}`] || 0;

  const handleAdd = () => {
    if (!selectedColor || !selectedSize) {
      alert("يرجى اختيار اللون والمقاس");
      return;
    }
    if (remainingQuantity === 0) return;
    addToCart(product, selectedColor, selectedSize);
    alert("تم إضافة المنتج إلى السلة");
  };

  return (
    <div style={{ padding: "20px", display: "flex", flexWrap: "wrap", gap: "20px" }}>
      <div style={{ flex: "1 1 300px" }}>
        {product.images.map((img, idx) => (
          <img
            key={idx}
            src={img}
            alt={`${product.name} ${idx + 1}`}
            style={{ width: "100%", marginBottom: "10px", borderRadius: "10px" }}
            loading="lazy"
          />
        ))}
      </div>

      <div style={{ flex: "1 1 300px" }}>
        <h2>{product.name}</h2>
        <p><strong>السعر:</strong> {product.price} جنيه</p>
        <p><strong>الكميه المتبقيه:</strong> {remainingQuantity}</p>
        <p><strong>التقييم:</strong> {'⭐'.repeat(product.rating || 0)}</p>
        {product.description && (
          <p><strong>الوصف:</strong> {product.description}</p>
        )}

        <div style={{ marginTop: "10px" }}>
          <label>اللون: </label>
          <select value={selectedColor} onChange={(e) => setSelectedColor(e.target.value)}>
            {product.colors.map(c => <option key={c} value={c}>{c}</option>)}
          </select>
        </div>

        <div style={{ marginTop: "10px" }}>
          <label>المقاس: </label>
          <select value={selectedSize} onChange={(e) => setSelectedSize(e.target.value)}>
            {product.sizes.map(s => <option key={s} value={s}>{s}</option>)}
          </select>
        </div>

        <button
          onClick={handleAdd}
          disabled={remainingQuantity === 0}
          style={{
            marginTop: "15px",
            padding: "8px 15px",
            borderRadius: "5px",
            backgroundColor: remainingQuantity === 0 ? "#ccc" : "#c71585",
            color: "#fff",
            cursor: remainingQuantity === 0 ? "not-allowed" : "pointer"
          }}
        >
          {remainingQuantity === 0 ? "انتهى" : "أضف إلى السلة"}
        </button>
      </div>
    </div>
  );
};

export default ProductDetail;
